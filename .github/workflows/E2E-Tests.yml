name: Runs E2E UI Automation Frame-Work Tests 

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'zulu'
        
    - name: Set up Maven
      uses: stCarolas/setup-maven@v5
      with:
        maven-version: 3.9.4

    - name: Run tests
      continue-on-error: true
      run: > 
        mvn clean -Dtest="registration.RegistrationTests,login.LoginTests,homeSub.SubscriptionTests,
        Products.ProductTests,Products.SearchProductTests,contactUsForm.ContactUsFormTest,
        testCase.TestCasePage,logout.LogoutTest"











        

    # - name: Generate Allure report
    #   run: mvn allure:report

    # -  name: Copy patch file to allure-maven-plugin folder
    #    run: cp src/main/resources/allow-file-access_open-report_chrome_windows.bat target/site/allure-maven-plugin

    # - name: Upload Allure Report
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: Allure Report UI Tests Chrome Ubuntu
    #     path: "target/site/allure-maven-plugin"     


    # # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - name: Update dependency graph
    #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6





# name: e2e pipeline
# run-name: Build, Deploy, Test - from user @${{ github.actor }}

# on: 
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]
    

# jobs: 
#   build:  
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
      
#       - name: Set up JDK 17
#         uses: actions/setup-java@v3
#         with:
#           java-version: '17'
#           distribution: 'temurin'
#           cache: maven

#       - name: Run Unit Tests
#         run: mvn test
        
    
#   analyze:
#     name: Analyze
#     runs-on: ubuntu-latest
#     permissions:
#       actions: read
#       contents: read
#       security-events: write

#     strategy:
#       fail-fast: false
#       matrix:
#         language: [ 'java' ]
#         # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v3

#     - name: Initialize CodeQL
#       uses: github/codeql-action/init@v2
#       with:
#         languages: ${{ matrix.language }}

#     - name: Autobuild
#       uses: github/codeql-action/autobuild@v2

#     - name: Perform CodeQL Analysis
#       uses: github/codeql-action/analyze@v2
#       with:
#         category: "/language:${{matrix.language}}"
        
#   cleanup:
#     needs: [build]
#     runs-on: ubuntu-latest
#     environment: UAT

#     steps: 
#       - name: "cleanup destination at ${{ vars.UAT_IP }}"
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ vars.UAT_IP }}
#           port: ${{ vars.UAT_PORT }}
#           username: ${{ secrets.USER }}
#           key: ${{ secrets.SSH_KEY }}
#           script: |
#             rm -rf ./deployment/*
#             rm -rf ${{ vars.UAT_TOMCAT }}/digi*
            
#   deploy: 
#     needs: [cleanup]
#     runs-on: ubuntu-latest
#     environment: UAT
    
#     steps:
#       - uses: actions/download-artifact@v2
#         with:
#           name: digibank.war
#           path: ./deploy
          
#       - run: ls -ltr ./deploy
          
#       - name: deploy
#         uses: appleboy/scp-action@master
#         with:
#           host: ${{ vars.UAT_IP }}
#           port: ${{ vars.UAT_PORT }}
#           username: ${{ secrets.USER }}
#           key: ${{ secrets.SSH_KEY }}
#           source: './deploy/digibank.war'
#           target: 'deployment'
          
#   install:
#     needs: [deploy]
#     runs-on: ubuntu-latest
#     environment: UAT

#     steps: 
#       - name: "cleanup destination at ${{ vars.UAT_IP }}"
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ vars.UAT_IP }}
#           port: ${{ vars.UAT_PORT }}
#           username: ${{ secrets.USER }}
#           key: ${{ secrets.SSH_KEY }}
#           script: cp -f /home/ec2-user/deployment/deploy/digibank.war ${{ vars.UAT_TOMCAT }}
          
#       - name: Sleep for 10 seconds
#         run: sleep 10s
#         shell: bash
        
#   e2e-tests:
#     needs: [install]
#     runs-on: ubuntu-latest
#     environment: UAT
#     name: Trigger E2E Tests on UAT Environment

#     steps:
#       - name: Trigger Workflow from e2e tests with Playwright
#         run: |
#           curl -X POST \
#           -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" \
#           -H "Accept: application/vnd.github.v3+json" \
#           https://api.github.com/repos/tau-github-actions-for-testing/tau-digital-bank-e2e-tests/dispatches \
#           -d  '{"event_type": "trigger-tests", "client_payload" : { "sut" : "${{ vars.UAT_IP }}" } }'
